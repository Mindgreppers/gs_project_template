{
  "name": "restaurant-app",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "nodemon --watch ../gs_service/dist -r ../gs_service/dist/telemetry/tracing.js ../gs_service/dist/app.js | pino-pretty",
    "clean": "cd ../gs_service && npm run clean",
    "copy": "rsync -rv --exclude 'eg_config' src/* config ../gs_service/dist && touch ../gs_service/dist/app.js",
    "build": " npm i && npm run build-prisma && mkdir -p ../gs_service/project && rsync --delete -rv src config package.json ../gs_service/project/ && cd ../gs_service && npm run build",
    "build-prisma": "if [ ! -f '.prismagenerator' ] && [ `ls src/datasources/*.prisma | wc -c` -ne 0 ]; then npm run prisma-push; touch .prismagenerator; fi",
    "eg-push": "for f in src/datasources/eg_config/*; do echo ${f}; node ../gs_service/elasticgraph/lib/mappingGenerator/reIndexer.js ${f} all; done",
    "gen-crud-api": "npx godspeed-crud-api-generator",
    "prisma-push": "for i in src/datasources/*.prisma; do npx --yes prisma generate --schema $i && npx --yes prisma db push --schema $i; done;",
    "gen-api-docs": "node ../gs_service/dist/api-specs/api-spec.js | pino-pretty",
    "gen-test-suite": "npm run gen-api-docs && mkdir -p tests && openapi2postmanv2 -s docs/api-doc.yaml -o tests/test-suite.json -p -O folderStrategy=Tags,includeAuthInfoInExample=false",
    "test": "newman run tests/test-suite.json",
    "test-cov": "cd ../gs_service && npm run test-cov"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "nodemon": "^2.0.15",
    "pino-pretty": "^7.6.1",
    "prisma": "^4.13.0"
  },
  "dependencies": {
    "@opentelemetry/api": "1.1.0",
    "@opentelemetry/core": "1.5.0",
    "@prisma/client": "^4.13.0",
    "godspeed-crud-api-generator": "1.6.5",
    "newman": "^5.3.2",
    "openapi-to-postmanv2": "^3.2.1"
  }
}
